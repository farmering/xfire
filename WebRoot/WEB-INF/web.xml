<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext*.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>com.sdjz.eshop.servlet.listener.UserSessionListener</listener-class>
  </listener>
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>jCaptchaFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>cacheFilter</filter-name>
    <filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
    <init-param>
      <param-name>time</param-name>
      <param-value>3600</param-value>
    </init-param>
    <init-param>
      <param-name>scope</param-name>
      <param-value>application</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>excludeSuffixs</param-name>
      <param-value>js,css,jpg,gif,png,bmp,jpeg</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>struts</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>jCaptchaFilter</filter-name>
    <url-pattern>/captcha.jpg</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>JSPSupportServlet</servlet-name>
    <servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
    <servlet-name>ImageShowServlet</servlet-name>
    <servlet-class>com.sdjz.eshop.servlet.image.ImageShowServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>ImageHandlerServlet</servlet-name>
    <servlet-class>com.sdjz.eshop.servlet.image.ImageHandlerServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>RecorderServlet</servlet-name>
    <servlet-class>com.sdjz.eshop.servlet.recorder.RecorderServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>antiFakeCode</servlet-name>
    <servlet-class>com.sdjz.eshop.servlet.image.AntiFakeCode</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ImageShowServlet</servlet-name>
    <url-pattern>/servlet/imageShowServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ImageHandlerServlet</servlet-name>
    <url-pattern>/servlet/imageHandlerServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>antiFakeCode</servlet-name>
    <url-pattern>/servlet/antiFakeCode.bmp</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>RecorderServlet</servlet-name>
    <url-pattern>/recorder</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/html/404.html</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/html/404.html</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/html/404.html</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/html/404.html</location>
  </error-page>
</web-app>