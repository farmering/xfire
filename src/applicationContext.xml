<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
	<!--
		<bean id="xInitializing" class="net.shopxx.common.Initializing">
		<property name="keyFile" value="c2hvcHh4LnR4d" /> </bean>
	-->
	<!-- 设置需要进行Spring注解扫描的类包 -->
	<context:component-scan base-package="com.sdjz.eshop" />
	
	<!-- JDBC参数配置 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 设置JDBC驱动名称 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!-- 设置JDBC连接URL -->
		<property name="url" value="${jdbc.url}" />
		<!-- 设置数据库用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 设置数据库密码 -->
		<property name="password" value="${jdbc.password}" />

		<!-- 设置连接池初始值 -->
		<property name="initialSize" value="3" />
		<!-- 设置连接池最大值 -->
		<property name="maxActive" value="60" />
		<!-- 设置连接池最小空闲值 -->
		<property name="minIdle" value="2" />
		<!-- 设置连接池最大空闲值 -->
		<property name="maxIdle" value="5" />
		<!-- 设置验证SQL -->
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<!-- 设置取出连接时验证其是否有效 -->
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- 配置Hibernate拦截器,自动填充数据的插入、更新时间 -->
		<property name="entityInterceptor" ref="entityInterceptor" />
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 设置数据库方言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!--
					设置自动创建|更新|验证数据库表结构 <prop key="hibernate.hbm2ddl.auto">update</prop>
				-->
				<!-- 输出SQL语句到控制台 -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- 格式化输出到控制台的SQL语句 -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- 是否开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 配置二级缓存产品 -->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider</prop>
				<!-- 是否开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 数据库批量查询数 -->
				<!-- <prop key="hibernate.jdbc.fetch_size">50</prop> -->
				<!-- 数据库批量更新数 -->
				<prop key="hibernate.jdbc.batch_size">30</prop> 
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com/sdjz/eshop/entity</value>
			</list>
		</property>
	</bean>
	
	<!-- 缓存配置 -->
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:/ehcache.xml</value>
		</property>
	</bean>
	
	<!-- 资源权限验证 -->
	<bean id="resourceCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
      <property name="cacheManager" ref="cacheManagerFactory" />  
      <property name="cacheName" value="RESOURCE_CACHE" />  
    </bean>

	<!--
    <oscache:config configLocation="classpath:oscache.properties" id="cacheProvider" />
	<oscache:annotations providerId="cacheProvider">
		<oscache:caching id="caching" cronExpression="0 1 * * *" refreshPeriod="86400" />
		<oscache:flushing id="flushing" />
	</oscache:annotations>

	<bean id="cacheManager" class="org.springmodules.cache.provider.oscache.OsCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:oscache.properties" />
	</bean>  -->


	<!-- 使用AspectJ方式配置AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<aop:config proxy-target-class="true" />

	<!-- 使用注解方式定义事务 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true"/>
			<tx:method name="load*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- 配置哪些类的哪些方法参与事务 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.sdjz.eshop.service.*..*.*(..))" advice-ref="transactionAdvice" />
	</aop:config>
	
	<!-- 配置JCaptcha验证码功能 -->
	<bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="com.sdjz.eshop.common.JCaptchaEngine" />
		</property>
		<!-- 验证码过期时间 -->
		<property name="minGuarantedStorageDelayInSeconds" value="600" />
	</bean>

	<!-- 配置freemarkerManager -->
	<bean id="freemarkerManager" class="org.apache.struts2.views.freemarker.FreemarkerManager" />

	<!-- 配置freeMarkerConfigurer -->
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="/WEB-INF/template/admin/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">1800</prop><!-- 模板更新延时 -->
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>
</beans>